---
layout: post
title:  "운영체제"
date:   2020-02-05 13:36:15 +0900
categories: spark
permalink: '/spark/operating-system'
---

## 운영체제 소개

### 1. 대표적인 운영체제

- windows os, mac os, unix(가장 현대 운영체제 기술을 최초로 구현함.)
- unix os 
    - 70년대부터 개발되었다.
    - unix 계열 os: 리눅스 os
        - unix와 사용법 및 os 구조가 유사한 os
    - 리눅스 os
        - 프로그래머, 전공자들이 잘 알아야하는 os
        - 인터넷 서비스를 구동시키는 서버 환경은 대부분 리눅스를 사용한다. 
  
### 2. 역할 1 : 시스템 자원 관리자

- 시스템 자원 = 하드웨어라고 보면됨.
    - cpu, memory, 입출력장치, 저장매체
- 하드웨어는 스스로 할 수 있는 것이 없다. 
    - cpu: 각 프로그램이 얼마나 cpu를 사용할지 cpu가 알아서 결정할 수 없다. 그것은 운영체제가 결정해준다. 
    - memory: 각 프로그램이 어느 주소에, 얼만큼의 메모리 공간을 확보해줘야하는 지도 운영체제가 결정해준다. 
    - 저장 매체: 어디에 어떤 file명으로, 어떻게 저장할지 스스로 결정할 수 없으므로 운영체제가 결정해준다. 
    - 입출력장치: 스스로 표시할 수 없음. 
- 그래서 운영체제가 필요하다. 
- OS가 미설치된 노트북? os가 없으면 하드웨어를 제어할 수 없어서 동작을 안한다.  

### 3. 역할 2 : 사용자와 컴퓨터 간의 커뮤니케이션을 지원

- 사용자 <-> os <-> 컴퓨터 하드웨어
- 사용자와 하드웨어 간의 커뮤니케이션을 중재하는 역할을 운영체제가 한다. os가 없다면, 사용자가 컴퓨터에 명령을 내릴 수 있는 수단이 없다.   
    

### 4. 역할 3 : 컴퓨터 하드웨어와 프로그램을 제어  

- 하드웨어 뿐만 아니라 프로그램을 제어한다. 
- (그림)
- 응용 프로그램 <-> os <-> 컴퓨터 하드웨어
- os 구성 요소  
    - shell 소프트웨어: user interface에 해당하며, gui, batch, command line 등이 있다. 
- os의 system call들
    - process management
    - main memory management
    - file management
    - disk management
    - io management
    - networking protection
        
---

## 운영체제와 응용 프로그램


- 프로그램 = 소프트웨어 = 운영체제, 응용 프로그램 

### 1. 응용 프로그램 과의 관계

- 운영 체제는 응용 프로그램을 관리한다. 
    - **실행**시킨다.
    - **권한**을 관리해준다. 
        - 관리자 권한으로 실행
    - 응용프로그램의 **사용자**를 관리해준다. 
        - 로그인 기능

- 목표: 사용자가 사용하는 응용 프로그램이 효율적으로, 적절하게 동작하도록 지원해야함.

1. 응용 프로그램을 관리한다. 
    - **실행**시킨다.
    - **권한**을 관리해준다. 
        - 관리자 권한으로 실행
    - 응용프로그램의 **사용자**를 관리해준다. 
        - 로그인 기능
2. 시스템 자원을 관리한다. 
3. 사용자와 컴퓨터간의 커뮤니케이션을 지원한다. 

- 예시
    - 예를 들어, 응용 프로그램에 무한 반복문을 넣는 등 잘못 작성해서 프로그램이 다운되는 경우 운영체제가 비정상적 동작을 하는 프로그램을 중지 시키는 등 관리를 해줄 수 있다. 
    - 모든 파일 삭제 막기 (권한 / 사용자 관리)
    - 응용프로그램이 욕심이 많아서 cpu를 자기가 쓰겠다라고 하는 비정상적인 것을 운영체제가 막는다. 

### 2. 운영체제는 어디에 있을까?

- 운영체제는 SSD/HDD에 설치된다.

- 컴퓨터를 부팅시 --> 운영체제는 memory에 올라가게 됨

---

## 운영 체제 역사

### 1. 1950-1960

### 2. 1960 - 시분할 시스템

### 3. 1960 - 멀티태스킹

### 4. 1970

### 5. 1980

### 6. 1990

### 7. 2000




### Reference
- <a href="#"> 파이썬을 활용한 스파크 프로그래밍 - 제프리 에이븐 </a>