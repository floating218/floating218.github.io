---
layout: post
title:  "운영체제"
date:   2020-02-05 13:36:15 +0900
categories: spark
permalink: '/spark/operating-system'
---

--- 

## 운영체제 큰 그림

1. 역할1) 시스템 자원 관리자

    - 시스템 자원 = 하드웨어라고 보면됨.
        - cpu, memory, 입출력장치, 저장매체

    - 하드웨어는 스스로 할 수 있는 것이 없다. 
        - cpu: 각 프로그램이 얼마나 cpu를 사용할지 cpu가 알아서 결정할 수 없다. 그것은 운영체제가 결정해준다. 
        - memory: 각 프로그램이 어느 주소에, 얼만큼의 메모리 공간을 확보해줘야하는 지도 운영체제가 결정해준다. 
        - 저장 매체: 어디에 어떤 file명으로, 어떻게 저장할지 스스로 결정할 수 없으므로 운영체제가 결정해준다. 
        - 입출력장치: 스스로 표시할 수 없음. 
    
    - 그래서 운영체제가 필요하다. 

    - OS가 미설치된 노트북? os가 없으면 하드웨어를 제어할 수 없어서 동작을 안한다. 

2. 대표적인 운영체제

    - windows os, mac os, unix(가장 현대 운영체제 기술을 최초로 구현함.)

    - unix os 
        - 70년대부터 개발되었다.
        - unix 계열 os: 리눅스 os
            - unix와 사용법 및 os 구조가 유사한 os
        - 리눅스 os
            - 프로그래머, 전공자들이 잘 알아야하는 os
            - 인터넷 서비스를 구동시키는 서버 환경은 대부분 리눅스를 사용한다. 
    
3. 역할2) 사용자와 컴퓨터 간의 커뮤니케이션을 지원

    - 사용자 <-> os <-> 컴퓨터 하드웨어
    - 사용자와 하드웨어 간의 커뮤니케이션을 중재하는 역할을 운영체제가 한다. os가 없다면, 사용자가 컴퓨터에 명령을 내릴 수 있는 수단이 없다. 
    
4. 역할3) 컴퓨터 하드웨어와 프로그램을 제어

    - 하드웨어 뿐만 아니라 프로그램을 제어한다. 
    - (그림)
    - 응용 프로그램 <-> os <-> 컴퓨터 하드웨어
    - os 구성 요소  
        - shell 소프트웨어: user interface에 해당하며, gui, batch, command line 등이 있다. 
    - os의 system call들
        - process management
        - main memory management
        - file management
        - disk management
        - io management
        - networking protection
    

---

## 운영체제와 응용 프로그램

1. 



---

### Reference
- <a href="#"> 파이썬을 활용한 스파크 프로그래밍 - 제프리 에이븐 </a>