---
layout: post
title:  "운영체제(3) : 프로세스 스케줄링"
date:   2020-02-12 16:36:15 +0900
categories: os
permalink: '/os/os-scheduling'
shortdate: 2020-02-10 
---

#### **배치 처리 시스템** 

<img src="../assets/img/os/batchprocessing.png">

배치 처리 시스템은 자료구조 ``큐(queue)``와 유사합니다. 배치 처리 시스템은 **FIFO**, 즉 먼저 들어간 프로그램이 먼저 시작하고 끝납니다. app1이 가장 먼저, 그다음에 app2, 그 다음에 app3가 들어간 거라면, 위 그림처럼 app1 -> app2 -> app3 순서로 cpu가 프로그램을 실행합니다.

**배치처리 시스템의 한계**  

배치 처리 시스템은 한계가 있습니다. ``한 프로그램의 실행 시간이 너무 길면, 다른 프로그램이 너무 오래 기다려야 한다는 점``입니다. app2의 경우, 3시간이면 끝나는 일인데 app1이 끝날때까지 5시간 동안이나 기다려야 합니다. 또한, 한 프로그램을 실행시키면서 **``동시에``** 다른 프로그램도 실행시킬 수도 없으며, 여러 사용자가 동시에 하나의 컴퓨터를 사용할 수도 없습니다. (**``다중 사용자 지원``**)

#### **시분할 시스템 : 다중 사용자 + 응답시간 감소**

<img src="../assets/img/os/timeseries.png">

시분할 시스템은 컴퓨터 응답 시간을 최소화 시켜서, ``다중 사용자를 지원합니다``.

#### **멀티 태스킹 : 마치 동시 실행**

<img src="../assets/img/os/multitasking1.png">

멀티태스킹은 하나의 cpu에서 여러 프로그램이 동시에 실행되는 것처럼 보이게 합니다. 운영체제 역사에서 이미 공부한 바 있는데요, cpu는 프로그램을 실행하는 동시에 저장 매체를 왔다갔다 해야 합니다. 저장 매체에서 데이터를 읽어오는 동안에 cpu에서 다른 프로그램을 실행할 수 있습니다. 데이터를 읽어오면 다시 원래의 프로그램을 실행하게 할 수 있습니다. 이렇게 cpu를 한번도 쉬지 않게 하면서, 마치 여러 프로그램이 동시에 실행되는 것처럼 보이게 하는 것입니다. 

<img src="../assets/img/os/multitasking2.png">

데이터를 읽어오는 것이 아니라 다른 프로그램을 할 때도 마찬가지 입니다. 짧은 시간 안에 실행하는 프로그램을 바꿔가면 마치 동시에 여러개의 프로그램을 실행하는 것처럼 보인다는 것입니다. 음악을 들으면서 동시에 문서를 작성하는 작업이 가능한데요, 이는 cpu가 재생할 음악을 빠른 시간 내에 처리하고 음악을 재생한 직후, 문서를 작성하는 작업으로 전환하는 것입니다. 이로써 음악을 들으면서 동시에 문서를 작성할 수 있게 됩니다.  

### **멀티 태스킹과 멀티 프로세싱과의 차이**

멀티 태스킹과 자주 혼동되는 개념은 멀티 프로세싱입니다. 멀티 프로세싱은 멀티 태스킹과는 다른 개념입니다. 단일 cpu를 사용하는 멀티 태스킹과는 달리, 멀티 프로세싱은 ``여러 cpu를 사용하여 하나의 프로그램을 병렬로 실행하는 시스템``입니다.


<hr style= "border:none; border:1px dashed gray;">


### Reference
- <a href="http://www.fastcampus.co.kr">fast campus 강의</a>