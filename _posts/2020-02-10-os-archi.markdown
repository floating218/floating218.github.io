---
title : "운영체제(2) : 운영체제 구조"
category :
  - os
tag :
  - me
  - diary
  - subinium
use_math : true
author_profile : true
header:
  teaser : /assets/images/category/subin.jpg
  overlay_image : /assets/images/category/subin.jpg
  overlay_filter: 0.1
---


#### **운영체제를 도서관으로 비유**

- ``운영체제``는 ``도서관``
- ``응용 프로그램``은 ``시민``
- ``하드웨어``는 ``책``

1. 시민이 도서관에 책을 요청합니다.
- 응용프로그램이 운영체제에게 자원을 요청합니다.

2. 도서관은 책을 찾아서 시민에게 빌려줍니다. 
 - 운영체제는 자원을 찾아서 응용프로그램에게 빌려줍니다.
    - 메모리 허가,분배
    - cpu 시간 제공
    - io 장치 허가

3. 시민이 책을 다 읽거나, 기한이 다 되면, 도서관이 책을 회수합니다.
    - 운영체제가 자원을 회수합니다.  

#### **운영체제의 구조**

<!-- https://steemitiages.com/150X150/ -->
<center> <img src='../assets/img/os/os1.png' style="height:300px;"> </center>

1. 운영체제에게 자원을 요청하기 위해서는 요청서(시스템콜)가 필요합니다. 
2. 그런데 이 시스템콜을 직접 사용하기는 프로그래밍이 복잡합니다.
3. 그래서 이 문제를 완화하기 위해 각 언어별로 운영체제 기능을 요청할 수 있는 인터페이스(=api)를 제공합니다. api 내부에는 시스템콜이 있습니다. 
4. api,라이브러리를 기반으로 해서 application, shell등을 만듭니다.
5. 사용자는 application, shell등을 사용합니다.

<center> <b>
Shell : 운영체제는 사용자 인터페이스를 제공합니다. </b> 
</center>

쉘(shell) 은  사용자가 운영체제 기능과 서비스를 조작할 수 있도록 인터페이스를 제공하는 응용 프로그램입니다. 쉘은 터미널 환경 CLI와 그래픽 환경 GUI로 분류합니다. 

<center> <b>
API : 운영체제는 응용프로그램을 위해서 인터페이스를 제공합니다. 
</b></center>

Application programming interface. api는 각 응용프로그램마다 함수로 제공됩니다. 보통은 이 함수들을 묶어서 라이브러리 형태로 제공합니다. 
- 예를 들어 clibrary에서 printf()도 api의 함수라고 할 수 있습니다. 
- 시민이 도서관에 책을 요청하기 위해서는 신청서를 작성해서 제출해야합니다.
- 사용자 또는 응용프로그램이 자원을 요청하기 위해서는 api형태의 요청서를 제출하여야 합니다. 

<center> <b>
시스템콜  : 운영체제는 응용프로그램을 위해서 시스템콜을 제공합니다.
</b></center>

운영체제가 운영체제 각 기능을 사용할 수 있게하는 명령어 또는 함수를 제공하는데 이를 시스템콜이라고 합니다. api 내부에는 시스템콜을 호출하는 형태로 만들어집니다.  

<img src="../assets/img/blank.png" style="height:10px">

#### **운영체제를 만드는 방법**
1. 운영체제를 개발합니다. = kernel
2. 시스템콜을 개발합니다.
3. c언어로 shell을 만들고 싶으면, c api(library)를 만들어야합니다.
4. c언어로 shell 프로그램을 만듭니다.
5. 응용프로그램을 만듭니다.

**운영체제 별로 시스템콜은 다릅니다.**

- **POSIX API** : 표준적인 시스템콜을 정의하는 문서도 있습니다. 

- **윈도우 API** : 자기만의 규격입니다.

- **맥** : 리눅스의 시스템콜과 유사합니다.

**API와 시스템콜이 헷갈려요.**

- 시스템콜: 운영체제 기능을 호출하는 함수
- API: 각 언어별 운영체제 기능 호출 인터페이스 함수 (각 언어별 인터페이스)

<img src="../assets/img/blank.png" style="height:30px">

    ### 중간 요약 (운영체제의 구조)

    - 운영체제는 하드웨어와 응용 프로그램을 관리합니다. 
    - 사용자 인터페이스를 제공하기 위해 쉘을 제공합니다. 
    - 응용프로그램이 운영체제 기능을 요청하기 위해서 
    그 기능으로 운영체제는 시스템 콜을 제공합니다.
    - 시스템콜을 c언어로 직접 사용할수는 있습니다만, 
    직접 사용하는 대신 시스템콜을 이용해서 만든 언어별 라이브러리인 api를 사용합니다. 

<img src="../assets/img/blank.png" style="height:50px">

### CPU의 권한 모드, CPU protection rings
인텔 cpu를 기준으로, 4가지 모드 (ring0, ring1, ring2, ring3)를 가지고 있습니다. 그리고 대부분 그 중에서 2가지만 사용합니다. ring0이 커널 모드, ring3이 user 모드입니다.

<center>
<img src='../assets/img/os/os3.png' style='height:300px;'>
</center>

- **``사용자 영역 user mode = ring3``**: 응용프로그램이 사용합니다.
- **``커널 영역 kernel mode = ring0``**: OS가 사용합니다. 특권 명령어 실행 및 원하는 작업 수행을 위한 자원 접근이 가능한 모드입니다.  os가 cpu를 쓸때 사용하는 모드라고 할 수 있습니다. 

**시스템콜이 실제로 실행되는 것은 커널 영역에서 실행됩니다.** 

- 커널 모드에서만 실행 가능한 기능들이 있습니다. 운영 체제에 구현이 되어 있습니다. 
    - 응용프로그램은 사용자 모드입니다. 응용 프로그램이 그 기능을 쓰려면 시스템콜을 사용해야 합니다. 

- 커널 모드로 실행하려면 반드시 시스템 콜을 사용하여야 합니다. 
    - 시스템콜을 사용하면 커널 모드로 변환되며, 비로소 cpu 실행을 할 수 있습니다.

- 시스템 콜은 운영체제가 제공합니다. 

**CPU의 권한모드를 동사무소에 비유하면**

- **``사용자 모드``**: 시민이 동사무소(정부 사이트)에서 신청서(**``시스템콜``**)를 써야만 등본을 발급할 수 있습니다.  

- **``커널 모드``**: 동사무소 직원은 특별한 권한이 있어서, 신청서를 받으면 등본 출력 명령을 실행할 수 있습니다. 

**응용프로그래머와 시스템프로그래머의 차이**

- **``응용프로그래머``**는 API를 사용해서 응용프로그래머를 만드는 사람들입니다.  요즘에는 API 뿐만이 아니라 여러 Framework을 이해해야 합니다. 

- **``시스템프로그래머``**는 운영체제, shell(운영체제 관련 프로그램, 시스템 프로그램), API, system call, 하드웨어를 이해해서 운영 체제나 시스템 프로그램을 만드는 사람들입니다.  
   
<!-- ![](../assets/img/blank.png) -->
<img src="../assets/img/blank.png" style="height:50px">


**code로 설명할 수도 있습니다.**

![os2](../assets/img/os/os2.png)



```c
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

Int main(){
    int fd;

    fd=open("data.txt).O_RDONLY);
    /* open() 시스템 콜 호출합니다.*/
    /* 커널 모드로 전환합니다. */
    /* 운영체제 내부 코드인 sys_open() 커널 함수 호출합니다.*/
    /* 파일을 열기의 연산 수행 */
    /* 다시 사용자 모드로 돌아옵니다.*/

    if(fd==-1){
        printf("Error:can not open file");
        /*파일을 열지 못했으므로 그냥 종료*/
        return 1;
    }
    else{
        printf("File opened and no close");
        close(fd);
        return ();
    }
}
```

## 요약

- 운영체제는 시스템 콜을 제공합니다. 
- 프로그래밍 언어별로 운영체제 기능을 활용하기 위해 시스템 콜을 기반으로 한 api가 제공됩니다. 
- 응용프로그램은 운영체제 기능이 필요할 때 관련있는 api를 사용해서 프로그램을 작성합니다.
- 응용프로그램이 실행된다음에 운영체제 기능이 필요한 api가 호출된다면, 시스템콜이 호출되어서, 커널모드로 변경되어, os내부 명령이 실행되고, 다시 응용프로그램으로 돌아가게 됩니다. 





### Reference
- <a href="http://www.fastcampus.co.kr">fast campus 강의</a>